###################
#██████╗░██╗░░░██╗#
#██╔══██╗╚██╗░██╔╝#
#██████╦╝░╚████╔╝░#
#██╔══██╗░░╚██╔╝░░#
#██████╦╝░░░██║░░░#
#╚═════╝░░░░╚═╝░░░#
#                 #########################
#██╗░░░██╗██████╗░░█████╗░██████╗░██████╗░#
#██║░░░██║██╔══██╗██╔══██╗╚════██╗██╔══██╗#
#██║░░░██║██████╔╝██║░░██║░█████╔╝██║░░██║#
#██║░░░██║██╔══██╗██║░░██║░╚═══██╗██║░░██║#
#╚██████╔╝██║░░██║╚█████╔╝██████╔╝██████╔╝#
#░╚═════╝░╚═╝░░╚═╝░╚════╝░╚═════╝░╚═════╝░#
###########################################
# This is a Klipper configuration for TronXY X5SA Pro CoreXY Printer.
# 330x330x400 size with BIGTREETECH SKR-2 TMC2209, BLTOUCH/3DTOUCH DUAL Z STEPPERS, EPANSON BOARD ENABLED VIA ADDING EPANSION.CFG
#2021 Tronxy BLACK self-levelling plate sensor
# and stock Titan Extruder Clone.

###########################################################
# CAUTION: The Touchscreen cannot be used with Klipper!!! #
# You will lose all the display functionalities!!!        #
###########################################################

#            === FLASHING WITH STOCK BOOTLOADER ===
# You should make firmware for SKR-2,RENAME. FIRMWARE.BIN, COPY TO SD CARD TURN OFF PRINTER AND INSERT SD, TURN BACK ON, AWAIT HEART BEAT TO FINISH REBOOT PRINTER, KLIPPER WILL BE INSTALLED...##
[include macros/index.cfg]
[virtual_sdcard]
path: /home/khadas/printer_data/gcodes
[include pa_macro.cfg]
[display_status]
[pause_resume]
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 0.98
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 



################################################################################
[endstop_phase]

[include timelapse.cfg]

######################################
#████████╗███████╗███╗░░░███╗██████╗░#
#╚══██╔══╝██╔════╝████╗░████║██╔══██╗#
#░░░██║░░░█████╗░░██╔████╔██║██████╔╝#
#░░░██║░░░██╔══╝░░██║╚██╔╝██║██╔═══╝░#
#░░░██║░░░███████╗██║░╚═╝░██║██║░░░░░#
#░░░╚═╝░░░╚══════╝╚═╝░░░░░╚═╝╚═╝░░░░░#
######################################
[temperature_sensor SKR_V2]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor KHADAS]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

#[temperature_sensor TronXY]
#sensor_type: temperature_mcu
#sensor_mcu: TronXY
#min_temp: 0
#max_temp: 100
[mcu auxboard][mcu host]
serial: /tmp/klipper_host_mcu
[output_pin caselight]
pin: host:gpio35
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_3B003C001450304738323420-if00

#[mcu SKR12V]     
#serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2A0027000347393438343535-if00
#ADXL on MCU
#[adxl345]
#cs_pin: SKR12V: PE9
#spi_software_sclk_pin: SKR12V: PC5
#spi_software_mosi_pin: SKR12V: PB0
#spi_software_miso_pin: SKR12V: PB1
#[mcu TronXY]
# See the "mcu" section for configuration parameters.
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

#/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0 #ARDUINO UNO

#restart_method: command
#restart_method: command
#[adxl345]
#cs_pin: ardu: PB2
#clk_pin: ardu:PB13
#miso_pin: ardu:PB12
#mosi_pin: ardu:PB11
#spi_bus: spi1
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
 #165, 165, 20

#[led my_led]
#red_pin: ardu: PD2
#green_pin: ardu: PD3
#blue_pin: ardu: PD4
#white_pin: ardu: PD5
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
#cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 1.0
#initial_GREEN: 1.0
#initial_BLUE: 1.0
#initial_WHITE: 0.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.
 #####################################################
#██████╗░██████╗░██╗███╗░░██╗████████╗███████╗██████╗░#
#██╔══██╗██╔══██╗██║████╗░██║╚══██╔══╝██╔════╝██╔══██╗#
#██████╔╝██████╔╝██║██╔██╗██║░░░██║░░░█████╗░░██████╔╝#
#██╔═══╝░██╔══██╗██║██║╚████║░░░██║░░░██╔══╝░░██╔══██╗#
#██║░░░░░██║░░██║██║██║░╚███║░░░██║░░░███████╗██║░░██║#
#╚═╝░░░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░░░╚═╝░░░╚══════╝╚═╝░░╚═╝#
 #####################################################

[idle_timeout]
timeout: 1200

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 6500 
max_accel_to_decel: 6500
max_z_velocity: 50
max_z_accel: 700
square_corner_velocity: 5.0


[filament_switch_sensor RunoutSensor]
pause_on_runout: true
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: ^PC2

 ##################################
#╭━━━┳━━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━╮#
#┃╭━╮┃╭╮╭╮┃╭━━┫╭━╮┃╭━╮┃╭━━┫╭━╮┃╭━╮┃#
#┃╰━━╋╯┃┃╰┫╰━━┫╰━╯┃╰━╯┃╰━━┫╰━╯┃╰━━╮#
#╰━━╮┃╱┃┃╱┃╭━━┫╭━━┫╭━━┫╭━━┫╭╮╭┻━━╮┃#
#┃╰━╯┃╱┃┃╱┃╰━━┫┃╱╱┃┃╱╱┃╰━━┫┃┃╰┫╰━╯┃#
#╰━━━╯╱╰╯╱╰━━━┻╯╱╱╰╯╱╱╰━━━┻╯╰━┻━━━╯#
 ##################################

[stepper_x]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE3
microsteps: 32
rotation_distance: 40
endstop_pin: ^!PC1
position_endstop: 0
homing_speed: 150
position_endstop: 0
position_min: -1
position_max: 345
#stealthchop_threshold: 999999

#[extruder_2]
#step_pin: TronXY:PE5
#dir_pin: !TronXY:PE6
#enable_pin: !TronXY:PC13
#microsteps: 32
#rotation_distance: 8
#endstop_pin: ^!PC1
#position_endstop: -1
#position_min: -1
#position_max: 350 # for bed mesh
#homing_speed: 50
#homing_retract_dist: 10
#second_homing_speed: 10.0

#[stepper_y]
#step_pin: TronXY:PE2
#dir_pin: !TronXY:PE3
#enable_pin: !TronXY:PE4
#microsteps: 32
#rotation_distance: 40
#endstop_pin: ^!PC3
#position_endstop: 0
#position_max: 330
#homing_retract_dist: 10
#homing_speed: 50.0
#second_homing_speed: 10.0
[stepper_y]
step_pin: PD5
dir_pin: PD4
enable_pin: !PD6
microsteps: 32
rotation_distance: 40
endstop_pin: ^!PC3
position_endstop: -11
position_min: -20
position_max: 330
homing_speed: 150
#stealthchop_threshold: 999999

[stepper_z]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 32
endstop_pin:probe:z_virtual_endstop
position_min: -5
position_max: 400
rotation_distance: 8
#stealthchop_threshold: 999999

[safe_z_home]
home_xy_position: 195, 165
speed: 150
z_hop: 15
z_hop_speed: 80
#stealthchop_threshold: 999999

[stepper_z1]
step_pin: PD11
dir_pin: !PD10
enable_pin: !PD13
microsteps: 32
rotation_distance: 8
#stealthchop_threshold: 999999

[extruder]
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 32
rotation_distance: 34
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.105
heater_pin: PB3
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA2
min_temp: 0
max_temp: 300
max_extrude_only_distance: 2000
max_extrude_cross_section: 4.0
[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#CONTROL: watermark
min_temp: 0
max_temp: 130
#control: pid
#pid_Kp: 73.932
#pid_Ki: 1.521
#pid_Kd: 898.279

#[output_pin beeper]
#pin: TronXY: PD6

[tmc2209 stepper_x]
uart_pin: PE0
run_current: 1.00
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
#interpolate: true
uart_pin: PD3
run_current: 1.00
diag_pin:
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 1.200
#diag_pin:
#stealthchop_threshold: 999999
#interpolate: true

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 1.200
#diag_pin:
#stealthchop_threshold: 999999
#interpolate: true

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.450
#diag_pin:
#interpolate: true

#[input_shaper]
#shaper_freq_x: 86.0
#shaper_type_x: mzv
#shaper_freq_y: 42.4
#shaper_type_y: mzv

###################################
#███████╗░█████╗░███╗░░██╗░██████╗#
#██╔════╝██╔══██╗████╗░██║██╔════╝#
#█████╗░░███████║██╔██╗██║╚█████╗░#
#██╔══╝░░██╔══██║██║╚████║░╚═══██╗#
#██║░░░░░██║░░██║██║░╚███║██████╔╝#
#╚═╝░░░░░╚═╝░░╚═╝╚═╝░░╚══╝╚═════╝░#
###################################

#[fan]
#pin: SKR12V: PB7
[fan]
pin: PB7
[heater_fan fan1]
pin: PB6
heater_temp: 50
fan_speed: 1.0
#max_power: 1.0
[heater_fan fan2]
pin: PB5
heater_temp: 50
fan_speed: 1.0

[output_pin motor_power]
pin: PC13
value: 1

#[board_pins arduino-standard]
#aliases:
 #   ar0=PD0, ar1=PD1, ar2=PD2, ar3=PD3, ar4=PD4,
  #  ar5=PD5, ar6=PD6, ar7=PD7, ar8=PB0, ar9=PB1,
   # ar10=PB2, ar11=PB3, ar12=PB4, ar13=PB5, ar14=PC0,
    #ar15=PC1, ar16=PC2, ar17=PC3, ar18=PC4, ar19=PC5,
    #analog0=PC0, analog1=PC1, analog2=PC2, analog3=PC3, analog4=PC4,
    #analog5=PC5, analog6=PE2, analog7=PE3

#########################################
#██████╗░██████╗░░█████╗░██████╗░███████╗#
#██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔════╝#
#██████╔╝██████╔╝██║░░██║██████╦╝█████╗░░#
#██╔═══╝░██╔══██╗██║░░██║██╔══██╗██╔══╝░░#
#██║░░░░░██║░░██║╚█████╔╝██████╦╝███████╗#
#╚═╝░░░░░╚═╝░░╚═╝░╚════╝░╚═════╝░╚══════╝#
##########################################

[bltouch]
sensor_pin: ^PE4
control_pin: PE5
set_output_mode: 5V
stow_on_each_sample: False
probe_with_touch_mode: false
x_offset: -55
y_offset: -10
samples: 1
sample_retract_dist: 4.0
pin_move_time: 0.680
speed: 5
#####################################################################
#  Bed leveling
#####################################################################
#[bed_mesh]
#speed: 200
#horizontal_move_z: 12
#mesh_min: 10,10
#mesh_max: 290,290
#probe_count: 5,5
#algorithm: bicubic
#fade_start: 1.0
#fade_end: 6
#fade_target: 0
#mesh_pps:0,0
[bed_mesh]
speed: 1800
probe_count: 12, 14
horizontal_move_z: 10
algorithm: bicubic #lagrange
mesh_min : 5, 1
mesh_pps: 2, 3
bicubic_tension: 0.2
mesh_max: 285, 300
fade_start: 0.6
fade_end: 10.0
relative_reference_index: 5
move_check_distance: 5
split_delta_z: .025
relative_reference_index: 25
[bed_screws]
screw1: 10,5
screw2: 165,5
screw3: 325,5
screw4: 10,325
screw5: 165,325
screw6: 325,325
screw1_name: Front left
screw2_name: Front center
screw3_name: Front right
screw4_name: Back left
screw5_name: Back center
screw6_name: Back right

[screws_tilt_adjust]
# Positions must be offset so the PROBE ends up above the screw!!!
# For safety, move inward a bit so the probe doesn't end up slightly off the glass.
screw1: 50,25
screw2: 203,25
screw3: 340,25
screw4: 50,330
screw5: 203,330
screw6: 340,330
screw1_name: Front left
screw2_name: Front center
screw3_name: Front right
screw4_name: Back left
screw5_name: Back center
screw6_name: Back right
speed: 100
horizontal_move_z: 5
screw_thread: CW-M3

# Z0 is on the RIGHT side of the printer. Z1 is on the LEFT side.
[z_tilt]
z_positions: 
  327,175
  -95,175
points:
  340, 175
  60, 175
speed: 180
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.01



############################################ 
#███╗░░░███╗░█████╗░░█████╗░██████╗░░█████╗░#
#████╗░████║██╔══██╗██╔══██╗██╔══██╗██╔══██╗#
#██╔████╔██║███████║██║░░╚═╝██████╔╝██║░░██║#
#██║╚██╔╝██║██╔══██║██║░░██╗██╔══██╗██║░░██║#
#██║░╚═╝░██║██║░░██║╚█████╔╝██║░░██║╚█████╔╝#
#╚═╝░░░░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝░╚════╝░#
#############################################
[gcode_macro testLEVEL]
gcode: BED_SCREWS_ADJUST

[gcode_macro testNEXTPOINT]
gcode: ADJUSTED

[gcode_macro testACCEPT]
gcode: ACCEPT


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 1
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|float %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|float %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >= safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >= safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <= safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <= safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}
 
            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x))|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y))|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE

    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.764
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.716
#*# pid_ki = 2.334
#*# pid_kd = 136.612
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 57.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 37.4
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.000
#*# pid_ki = 1.481
#*# pid_kd = 780.301
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.017500, -0.013750, -0.037500, 0.010000, -0.016250, -0.030000, -0.048750, -0.031250, -0.017500, 0.007500, 0.033750, 0.090000
#*# 	  -0.043750, -0.026250, -0.038750, -0.002500, -0.016250, -0.026250, -0.055000, -0.031250, -0.021250, -0.011250, 0.020000, 0.051250
#*# 	  -0.023750, 0.000000, -0.005000, 0.026250, 0.025000, -0.003750, -0.023750, 0.007500, 0.011250, 0.025000, 0.060000, 0.065000
#*# 	  -0.001250, 0.005000, 0.013750, 0.076250, 0.031250, 0.013750, -0.005000, 0.006250, 0.018750, 0.051250, 0.051250, 0.068750
#*# 	  0.001250, 0.018750, 0.001250, 0.047500, 0.037500, 0.016250, 0.003750, 0.010000, 0.011250, 0.020000, 0.018750, 0.032500
#*# 	  0.000000, 0.020000, -0.005000, 0.028750, 0.020000, 0.013750, -0.001250, 0.003750, 0.001250, 0.013750, 0.030000, 0.018750
#*# 	  0.013750, 0.040000, 0.018750, 0.078750, 0.046250, 0.013750, 0.008750, 0.003750, 0.015000, 0.018750, 0.021250, 0.017500
#*# 	  0.047500, 0.063750, 0.046250, 0.126250, 0.060000, 0.028750, 0.018750, 0.016250, 0.025000, 0.022500, 0.032500, 0.010000
#*# 	  0.031250, 0.073750, 0.045000, 0.101250, 0.076250, 0.040000, 0.017500, 0.018750, 0.027500, 0.012500, 0.026250, -0.001250
#*# 	  0.062500, 0.095000, 0.062500, 0.126250, 0.113750, 0.095000, 0.062500, 0.058750, 0.056250, 0.038750, 0.067500, 0.037500
#*# 	  0.065000, 0.107500, 0.095000, 0.147500, 0.128750, 0.105000, 0.080000, 0.088750, 0.125000, 0.092500, 0.105000, 0.057500
#*# 	  0.042500, 0.086250, 0.066250, 0.142500, 0.111250, 0.083750, 0.085000, 0.080000, 0.097500, 0.086250, 0.085000, 0.050000
#*# 	  0.063750, 0.080000, 0.067500, 0.143750, 0.120000, 0.100000, 0.086250, 0.093750, 0.112500, 0.091250, 0.138750, 0.093750
#*# 	  0.070000, 0.112500, 0.081250, 0.145000, 0.111250, 0.101250, 0.097500, 0.080000, 0.106250, 0.091250, 0.105000, 0.081250
#*# x_count = 12
#*# y_count = 14
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 284.95
#*# min_y = 1.0
#*# max_y = 300.0
#*#
#*# [bed_mesh 1st good]
#*# version = 1
#*# points =
#*# 	-0.026250, -0.008750, -0.008750, -0.017500, -0.035000, 0.001250, -0.000000, -0.013750, -0.013750, -0.025000, -0.048750, -0.036250, -0.011250, -0.021250, -0.000000, 0.030000, 0.042500, 0.031250, 0.071250, 0.088750
#*# 	0.000000, -0.003750, 0.010000, 0.005000, -0.007500, 0.020000, 0.023750, 0.005000, 0.002500, -0.005000, -0.023750, -0.012500, -0.010000, -0.010000, 0.000000, 0.021250, 0.023750, 0.030000, 0.051250, 0.061250
#*# 	-0.005000, -0.002500, 0.011250, 0.007500, -0.007500, 0.020000, 0.020000, 0.002500, 0.000000, -0.002500, -0.026250, -0.010000, 0.007500, -0.010000, 0.006250, 0.017500, 0.022500, 0.022500, 0.051250, 0.038750
#*# 	0.008750, 0.007500, 0.016250, 0.022500, 0.017500, 0.033750, 0.032500, 0.017500, 0.020000, 0.012500, -0.001250, 0.012500, 0.020000, 0.006250, 0.022500, 0.037500, 0.038750, 0.036250, 0.050000, 0.051250
#*# 	0.007500, 0.005000, 0.017500, 0.010000, 0.005000, 0.036250, 0.032500, 0.015000, 0.017500, 0.010000, -0.003750, 0.013750, 0.016250, 0.011250, 0.022500, 0.037500, 0.036250, 0.036250, 0.056250, 0.057500
#*# 	0.000000, 0.006250, 0.017500, 0.025000, 0.008750, 0.038750, 0.028750, 0.018750, 0.012500, 0.012500, -0.003750, 0.003750, 0.017500, 0.012500, 0.012500, 0.031250, 0.031250, 0.027500, 0.047500, 0.047500
#*# 	0.008750, 0.008750, 0.016250, 0.023750, 0.007500, 0.035000, 0.036250, 0.016250, 0.016250, 0.011250, -0.003750, 0.016250, 0.018750, 0.005000, 0.015000, 0.031250, 0.026250, 0.030000, 0.048750, 0.050000
#*# 	0.016250, 0.012500, 0.030000, 0.027500, 0.016250, 0.041250, 0.041250, 0.025000, 0.025000, 0.013750, 0.006250, 0.021250, 0.023750, 0.007500, 0.016250, 0.033750, 0.030000, 0.031250, 0.048750, 0.045000
#*# 	0.025000, 0.023750, 0.030000, 0.028750, 0.020000, 0.043750, 0.043750, 0.023750, 0.025000, 0.020000, 0.005000, 0.010000, 0.025000, 0.017500, 0.025000, 0.033750, 0.031250, 0.028750, 0.047500, 0.052500
#*# 	0.046250, 0.043750, 0.052500, 0.048750, 0.040000, 0.067500, 0.065000, 0.036250, 0.033750, 0.025000, 0.010000, 0.027500, 0.035000, 0.022500, 0.027500, 0.047500, 0.042500, 0.038750, 0.060000, 0.056250
#*# 	0.058750, 0.053750, 0.063750, 0.061250, 0.051250, 0.078750, 0.076250, 0.063750, 0.053750, 0.047500, 0.027500, 0.033750, 0.042500, 0.026250, 0.030000, 0.055000, 0.047500, 0.040000, 0.058750, 0.053750
#*# 	0.062500, 0.062500, 0.067500, 0.067500, 0.058750, 0.082500, 0.083750, 0.051250, 0.053750, 0.050000, 0.030000, 0.040000, 0.042500, 0.032500, 0.038750, 0.056250, 0.045000, 0.036250, 0.047500, 0.052500
#*# 	0.057500, 0.053750, 0.066250, 0.067500, 0.058750, 0.086250, 0.085000, 0.073750, 0.073750, 0.062500, 0.040000, 0.053750, 0.061250, 0.051250, 0.048750, 0.057500, 0.052500, 0.050000, 0.061250, 0.057500
#*# 	0.071250, 0.078750, 0.085000, 0.092500, 0.073750, 0.110000, 0.110000, 0.085000, 0.083750, 0.082500, 0.060000, 0.067500, 0.068750, 0.062500, 0.066250, 0.078750, 0.076250, 0.071250, 0.083750, 0.075000
#*# 	0.088750, 0.083750, 0.096250, 0.090000, 0.083750, 0.117500, 0.126250, 0.093750, 0.092500, 0.087500, 0.071250, 0.085000, 0.095000, 0.072500, 0.085000, 0.103750, 0.105000, 0.082500, 0.095000, 0.102500
#*# 	0.100000, 0.087500, 0.108750, 0.101250, 0.093750, 0.128750, 0.133750, 0.102500, 0.096250, 0.091250, 0.073750, 0.083750, 0.107500, 0.087500, 0.090000, 0.115000, 0.106250, 0.091250, 0.115000, 0.102500
#*# 	0.088750, 0.081250, 0.112500, 0.103750, 0.080000, 0.117500, 0.138750, 0.097500, 0.090000, 0.092500, 0.073750, 0.085000, 0.097500, 0.090000, 0.090000, 0.108750, 0.111250, 0.093750, 0.103750, 0.122500
#*# 	0.101250, 0.088750, 0.116250, 0.108750, 0.092500, 0.127500, 0.146250, 0.102500, 0.097500, 0.106250, 0.078750, 0.091250, 0.107500, 0.097500, 0.093750, 0.128750, 0.132500, 0.105000, 0.137500, 0.150000
#*# 	0.107500, 0.096250, 0.118750, 0.121250, 0.092500, 0.131250, 0.148750, 0.117500, 0.110000, 0.113750, 0.107500, 0.106250, 0.122500, 0.118750, 0.115000, 0.142500, 0.137500, 0.120000, 0.145000, 0.247500
#*# 	0.097500, 0.096250, 0.112500, 0.112500, 0.097500, 0.131250, 0.145000, 0.110000, 0.097500, 0.115000, 0.103750, 0.096250, 0.117500, 0.111250, 0.106250, 0.122500, 0.130000, 0.108750, 0.135000, 0.170000
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 284.87
#*# min_y = 1.0
#*# max_y = 299.87
#*#
#*# [bed_mesh 30]
#*# version = 1
#*# points =
#*# 	  -0.017500, -0.013750, -0.037500, 0.010000, -0.016250, -0.030000, -0.048750, -0.031250, -0.017500, 0.007500, 0.033750, 0.090000
#*# 	  -0.043750, -0.026250, -0.038750, -0.002500, -0.016250, -0.026250, -0.055000, -0.031250, -0.021250, -0.011250, 0.020000, 0.051250
#*# 	  -0.023750, 0.000000, -0.005000, 0.026250, 0.025000, -0.003750, -0.023750, 0.007500, 0.011250, 0.025000, 0.060000, 0.065000
#*# 	  -0.001250, 0.005000, 0.013750, 0.076250, 0.031250, 0.013750, -0.005000, 0.006250, 0.018750, 0.051250, 0.051250, 0.068750
#*# 	  0.001250, 0.018750, 0.001250, 0.047500, 0.037500, 0.016250, 0.003750, 0.010000, 0.011250, 0.020000, 0.018750, 0.032500
#*# 	  0.000000, 0.020000, -0.005000, 0.028750, 0.020000, 0.013750, -0.001250, 0.003750, 0.001250, 0.013750, 0.030000, 0.018750
#*# 	  0.013750, 0.040000, 0.018750, 0.078750, 0.046250, 0.013750, 0.008750, 0.003750, 0.015000, 0.018750, 0.021250, 0.017500
#*# 	  0.047500, 0.063750, 0.046250, 0.126250, 0.060000, 0.028750, 0.018750, 0.016250, 0.025000, 0.022500, 0.032500, 0.010000
#*# 	  0.031250, 0.073750, 0.045000, 0.101250, 0.076250, 0.040000, 0.017500, 0.018750, 0.027500, 0.012500, 0.026250, -0.001250
#*# 	  0.062500, 0.095000, 0.062500, 0.126250, 0.113750, 0.095000, 0.062500, 0.058750, 0.056250, 0.038750, 0.067500, 0.037500
#*# 	  0.065000, 0.107500, 0.095000, 0.147500, 0.128750, 0.105000, 0.080000, 0.088750, 0.125000, 0.092500, 0.105000, 0.057500
#*# 	  0.042500, 0.086250, 0.066250, 0.142500, 0.111250, 0.083750, 0.085000, 0.080000, 0.097500, 0.086250, 0.085000, 0.050000
#*# 	  0.063750, 0.080000, 0.067500, 0.143750, 0.120000, 0.100000, 0.086250, 0.093750, 0.112500, 0.091250, 0.138750, 0.093750
#*# 	  0.070000, 0.112500, 0.081250, 0.145000, 0.111250, 0.101250, 0.097500, 0.080000, 0.106250, 0.091250, 0.105000, 0.081250
#*# x_count = 12
#*# y_count = 14
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 284.95
#*# min_y = 1.0
#*# max_y = 300.0
